<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="1200"
                ticks_per_second="10"
                random_seed="124" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <collective_transport_controller id="khivct"
		library="build/testing/libcollective_transport">
      <actuators>
        <differential_steering implementation="default" />
      </actuators>
      <sensors>
	    <positioning implementation="default" />
        <kheperaiv_proximity implementation="default" show_rays="false" />
        <kheperaiv_ultrasound implementation="default" show_rays="false" />
        <kheperaiv_lidar implementation="default" num_readings="10" show_rays="false" />
      </sensors>
      <params alpha="7.5" delta="0.1" velocity="5" />
    </collective_transport_controller>

  </controllers>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="10, 10, 1" center="0,0,0.5">

    <box id="wall_north" size="10,0.1,0.5" movable="false">
      <body position="0,5,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="10,0.1,0.5" movable="false">
      <body position="0,-5,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="0.1,10,0.5" movable="false">
      <body position="5,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="0.1,10,0.5" movable="false">
      <body position="-5,0,0" orientation="0,0,0" />
    </box>

    <box id="object" size="0.2,0.2,0.02" movable="true" mass="0.01">
      <body position="4.0,4.0,0" orientation="0,0,0" />
    </box>
    <box id="goal" size="0.1,0.1,0.001" movable="true" mass="0.001">
      <body position="-4.0,-4.0,0" orientation="0,0,0" />
    </box>

    <!--
        You can distribute entities randomly. Here, we distribute
        10 foot-bots in this way:
        - the position is uniformly distributed
        on the ground, in the square whose corners are (-2,-2) and (2,2)
        - the orientations are non-zero only when rotating around Z and chosen
        from a gaussian distribution, whose mean is zero degrees and
        standard deviation is 360 degrees.
    -->
    <distribute>
      <position method="uniform" min="4.5,4.5,0" max="4.5,4.5,0" />
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />
      <entity quantity="1" max_trials="100">
        <kheperaiv id="kh">
          <controller config="khivct" />
        </kheperaiv>
      </entity>
    </distribute>
    
    <!--kheperaiv id="kh0">
      <body position="4.0,4.0,0.0" orientation="0,0,0" />
      <controller config="khivct" />
    </kheperaiv-->

    <!--
        We distribute 5 boxes uniformly in position and rotation around Z.
    -->
    <distribute>
      <position method="uniform" min="-5,-5,0" max="5,5,0" />
      <orientation method="uniform" min="0,0,0" max="0,0,0" />
      <entity quantity="20" max_trials="100">
        <box id="b" size="0.5,0.5,0.1" movable="false">
        </box>
      </entity>
    </distribute>

    <!--
        We distribute cylinders uniformly in position and with
        constant rotation (rotating a cylinder around Z does not
        matter)
    -->
    <distribute>
      <position method="uniform" min="-5,-5,0" max="5,5,0" />
      <orientation method="constant" values="0,0,0" />
      <entity quantity="4" max_trials="100">
        <cylinder id="c" height="0.5" radius="0.25" movable="false" />
      </entity>
    </distribute>
    
    <!--cylinder id="object" radius="0.25" height="0.1" movable="true" mass="0.001">
      <body position="-4.0,-4.0,0.0" orientation="0,0,0" />
    </cylinder-->

  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
    <!-- <pointmass3d id="dyn2d" /> -->
  </physics_engines>

  <!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="build/testing/libtrajectory_loop_functions"
                  label="trajectory_loop_functions" />

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>
    <qt-opengl>
      <user_functions library="build/testing/libtrajectory_loop_functions"
                      label="trajectory_qtuser_functions" />
      <camera>
	<placement idx="0" position="0,0,2" look_at="0.02,0,1" up="0,1,0.0" lens_focal_length="5" />
    <placement idx="1" position="-1.37702,-1.04453,0.308332" look_at="-1.1334,-1.85855,-0.21895" up="0.15118,-0.505144,0.849691" lens_focal_length="20" />
	<placement idx="2" position="-2,0,2" look_at="-1.96001,0.000336195,1.0008" up="0.999165,0.00840039,0.0399893" lens_focal_length="20" />
    <placement idx="3" position="0,0,2" look_at="0.0,0,1" up="0,1,0.0" lens_focal_length="10" />
    <placement idx="4" position="-4.0,-4.0,2" look_at="-4.0,-4.0,1" up="0,1,0.0" lens_focal_length="10" />
      </camera>
    </qt-opengl>
  </visualization>

</argos-configuration>
